<?xml version="1.0" encoding="UTF-8" standalone="no" ?><mscript xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd"><version>23.2</version><release>2023b</release><date>2024-02-19</date><cell><count>1</count><mcode>% lab2_2024.m
% Please place lab2.m in your working directory
% Provide the print-out from running this function
% using 'publish lab2'
%
% T. Holton 7 Feb 2024

clear
test_lab2_2024;</mcode><mcode-xmlized><mwsh:code xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" xml:space="preserve"><mwsh:comments xml:space="preserve">% lab2_2024.m</mwsh:comments>
<mwsh:comments xml:space="preserve">% Please place lab2.m in your working directory</mwsh:comments>
<mwsh:comments xml:space="preserve">% Provide the print-out from running this function</mwsh:comments>
<mwsh:comments xml:space="preserve">% using 'publish lab2'</mwsh:comments>
<mwsh:comments xml:space="preserve">%</mwsh:comments>
<mwsh:comments xml:space="preserve">% T. Holton 7 Feb 2024</mwsh:comments>

clear
test_lab2_2024;</mwsh:code></mcode-xmlized><mcode-count>1</mcode-count><cellOutputTarget>1</cellOutputTarget></cell><cell><count>2</count><steptitle>Real-time Convolution</steptitle><text><p>Real-time convolution #1</p></text><mcode>x = [1 4 2 6 5];
h = [4 -1 3 -5 2];
test_lab2_2024;
test_lab2_2024(x, h);

% Real-time convolution convolution #2
test_lab2_2024(h, x);

% Real-time convolution #3
x = cos(2 * pi * (1:50000) / 16); % nice, big sequence
h = ones(1, 10);
tic;
test_lab2_2024(x, h);
t = toc;
disp(['The long convolution took ' num2str(t) ' secs'])
disp(' ')</mcode><mcode-xmlized><mwsh:code xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" xml:space="preserve">x = [1 4 2 6 5];
h = [4 -1 3 -5 2];
test_lab2_2024;
test_lab2_2024(x, h);

<mwsh:comments xml:space="preserve">% Real-time convolution convolution #2</mwsh:comments>
test_lab2_2024(h, x);

<mwsh:comments xml:space="preserve">% Real-time convolution #3</mwsh:comments>
x = cos(2 * pi * (1:50000) / 16); <mwsh:comments xml:space="preserve">% nice, big sequence</mwsh:comments>
h = ones(1, 10);
tic;
test_lab2_2024(x, h);
t = toc;
disp([<mwsh:strings xml:space="preserve">'The long convolution took '</mwsh:strings> num2str(t) <mwsh:strings xml:space="preserve">' secs'</mwsh:strings>])
disp(<mwsh:strings xml:space="preserve">' '</mwsh:strings>)</mwsh:code></mcode-xmlized><mcode-count>2</mcode-count><cellOutputTarget>2</cellOutputTarget><mcodeoutput class="codeoutput">Real-time convolution #1
   Your data are correct

Real-time convolution #2
   Your data are correct

Real-time convolution #3
   Your data are correct

The long convolution took 0.042554 secs
 
</mcodeoutput></cell><cell><count>3</count><steptitle>Code</steptitle><mcode>disp('---------------------------------------------------')
disp('                     Code')
disp('---------------------------------------------------')
type convolv_rt</mcode><mcode-xmlized><mwsh:code xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd" xml:space="preserve">disp(<mwsh:strings xml:space="preserve">'---------------------------------------------------'</mwsh:strings>)
disp(<mwsh:strings xml:space="preserve">'                     Code'</mwsh:strings>)
disp(<mwsh:strings xml:space="preserve">'---------------------------------------------------'</mwsh:strings>)
type <mwsh:strings xml:space="preserve">convolv_rt</mwsh:strings></mwsh:code></mcode-xmlized><mcode-count>3</mcode-count><cellOutputTarget>3</cellOutputTarget><mcodeoutput class="codeoutput">---------------------------------------------------
                     Code
---------------------------------------------------

function y = convolv_rt(x, h)
    lh = length(h);
    hbuf = h(:)'; % make h a row vector
    x = [x(:); zeros(lh-1, 1)]; % pad x with zeros
    y = zeros(1, length(x)); % preallocate output array
    xbuf = zeros(lh, 1); % initialize input array as column vector
    for i = 1:length(x) % for each new value of x[n]
        % put x(i) into the buffer in reverse order
        xbuf(end - mod(i, lh))  = x(i);
        % set up the indexing into the hbuf and/or xbuf arrays here
        y(i) = hbuf * [xbuf(end - mod(i, lh):end); xbuf(1:end - mod(i, lh) -1)]; % store output value
    end
end
</mcodeoutput></cell><originalCode>% lab2_2024.m&#xD;
% Please place lab2.m in your working directory &#xD;
% Provide the print-out from running this function&#xD;
% using 'publish lab2'&#xD;
%&#xD;
% T. Holton 7 Feb 2024&#xD;
&#xD;
clear&#xD;
test_lab2_2024;&#xD;
&#xD;
%% Real-time Convolution&#xD;
% Real-time convolution #1&#xD;
x = [1 4 2 6 5];&#xD;
h = [4 -1 3 -5 2];&#xD;
test_lab2_2024;&#xD;
test_lab2_2024(x, h);&#xD;
&#xD;
% Real-time convolution convolution #2&#xD;
test_lab2_2024(h, x);&#xD;
&#xD;
% Real-time convolution #3&#xD;
x = cos(2 * pi * (1:50000) / 16); % nice, big sequence&#xD;
h = ones(1, 10);&#xD;
tic;&#xD;
test_lab2_2024(x, h);&#xD;
t = toc;&#xD;
disp(['The long convolution took ' num2str(t) ' secs'])&#xD;
disp(' ')&#xD;
&#xD;
%% Code&#xD;
disp('---------------------------------------------------')&#xD;
disp('                     Code')&#xD;
disp('---------------------------------------------------')&#xD;
type convolv_rt&#xD;
</originalCode><m-file>lab2_2024</m-file><filename>/Users/kinzo/Dev/engr-451/lab2_2024/lab2_2024.m</filename><outputdir>/Users/kinzo/Dev/engr-451/lab2_2024/html</outputdir></mscript>